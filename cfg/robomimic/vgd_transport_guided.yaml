defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}

name: robomimic_transport_vgd_guided_${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
logdir: ${log_dir}/robomimic-vgd/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
base_policy_path: ./dppo/log/robomimic-pretrain/transport/transport_pre_diffusion_mlp_ta8_td100_ddim-100steps_size2048/2025-04-21_08-40-08_47/checkpoint/state_3000.pt
offline_data_path: ./dppo/log/robomimic/transport_traj_data/train_offline.npz
normalization_path: ./dppo/log/robomimic/${env_name}/normalization.npz
dppo_path: ./dppo

seed: 12
device: cuda:0
use_wandb: True
torch_compile: False
env_name: transport
log_dir: ./logs
obs_dim: 59
action_dim: 14
cond_steps: 1
act_steps: 8
load_offline_data: False
deterministic_eval: False
record_eval_noise: True
record_eval_episodes: 5
stop_after_episodes: -1

eval_interval: 1000
num_evals: 200
save_model_interval: 100000
save_replay_buffer: False

env:
  n_envs: 4
  n_eval_envs: 25
  name: ${env_name}
  max_episode_steps: 800
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 1
  reward_offset: 1
  wrappers:
    robomimic_lowdim:
      normalization_path: ${normalization_path}
      low_dim_keys: ['robot0_eef_pos',
                    'robot0_eef_quat',
                    'robot0_gripper_qpos',
                    'robot1_eef_pos',
                    'robot1_eef_quat',
                    'robot1_gripper_qpos',
                    'object']
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  project: vgd
  run: ${now:%H-%M-%S}_${name}
  group: robomimic-transport

train:
  tau: 0.005
  actor_lr: 3e-4
  batch_size: 1024
  train_freq: 1
  utd: 20
  init_rollout_steps: 20001
  use_layer_norm: True
  layer_size: 2048
  num_layers: 3
  discount: 0.99
  n_critics: 2
  critic_backup_combine_type: min
  guidance_lambda: 0.0008
  guidance_warmup_steps: 100000
  guidance_time_anneal: linear
  guidance_last_k_steps: 3
  guidance_decode_steps: -1

model:
  _target_: model.diffusion.diffusion_eval.DiffusionEval
  ft_denoising_steps: 0
  predict_epsilon: True
  denoised_clip_value: 1.0
  randn_clip_value: 3
  network_path: ${base_policy_path}
  network:
    _target_: model.diffusion.mlp_diffusion.DiffusionMLP
    time_dim: 32
    mlp_dims: [2048, 2048, 2048]
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${act_steps}
    action_dim: ${action_dim}
  horizon_steps: ${act_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: 100
  device: ${device}
  use_ddim: True
  ddim_steps: 10
  controllable_noise: True


